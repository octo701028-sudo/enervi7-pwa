/* app.js (clean) */ 
(function ensure(){ if(typeof Chart==='undefined'){const s=document.createElement('script');s.src='https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js';s.onload=boot;document.head.appendChild(s);} else {boot();}})();
const Q_TEXTS={Q1:"Q1 覺察：我能清楚覺察自己此刻的情緒、念頭與身體感受。",Q2:"Q2 釋放：當我察覺壓力或情緒時，我能有效地鬆開與代謝。",Q3:"Q3 信任：我對生活與未來持有信任與安全感，能允許事情順勢發生。",Q4:"Q4 行動：我能把想法拆解成最小可行步驟，並付諸行動。",Q5:"Q5 流動：我能維持專注與節奏，接受回饋並快速微調。",Q6:"Q6 共鳴：我與他人／世界連結感良好，能創造正向回饋與影響。",Q7:"Q7 整合：我能總結經驗並固化成結構與習慣，持續複製成果。"};
const T_TEXTS={T1:"T1 覺察→釋放：看見情緒或議題時，我能順利進入釋放與鬆綁。",T2:"T2 釋放→信任：在放下之後，我能自然進入信任與允許的狀態。",T3:"T3 信任→行動：由內在信任轉為具體行動的過程對我來說順暢。",T4:"T4 行動→流動：從單次行動進入穩定節奏與回饋迭代是順暢的。",T5:"T5 流動→共鳴：把成果分享並獲得回饋與擴散是順暢的。",T6:"T6 共鳴→整合：將被驗證的做法整理成 SOP／習慣是順暢的。",T7:"T7 整合→新覺察：結束一輪後回到清明覺察開啟下一輪是順暢的。"};
const STAGE_META={S1:{name:"S1 覺察 Awareness",keywords:["覺知當下","辨識情緒","看見模式","誠實面對"],actions:["寫三句『此刻我真實的感受是…』","3 分鐘腹式呼吸（4-4-6）並記錄身體感受","列出 1 個反覆念頭，標記是事實還是解讀"]},S2:{name:"S2 釋放 Release",keywords:["鬆綁負荷","情緒代謝","放下執著","完成回收"],actions:["一次『寫了就撕/燒』釋放書寫","身體掃描，對緊繃部位做 60 秒放鬆","把一件拖延小事今天完成並打勾"]},S3:{name:"S3 信任 Trust",keywords:["允許發生","對齊意圖","資源感","安全感"],actions:["用『我允許…』造句 3 句","回顧一次被支持的證據，寫下可複製處","今天主動請求一次幫助"]},S4:{name:"S4 行動 Action",keywords:["最小步驟","可驗證","節奏","執行力"],actions:["把目標拆成 10 分鐘可完成的一步","設定今日 3 件 MIT","完成後公開回報給可信任對象"]},S5:{name:"S5 流動 Flow",keywords:["專注","回饋循環","韌性","迭代"],actions:["把卡點→調整 1 個微策略","25 分鐘番茄鐘全程專注","記錄 1 個有效回饋，明天沿用"]},S6:{name:"S6 共鳴 Resonance",keywords:["連結","價值感","貢獻","擴散"],actions:["分享一個小成果或洞見","邀請 1 人給具體回饋","主動建立一個合作可能"]},S7:{name:"S7 整合 Integration",keywords:["總結經驗","固化習慣","結構化","長期化"],actions:["5 句話摘要本週 3 件學到＋1 改進","把有效步驟寫成 Checklist","為下個週期設定一個可衡量指標（KPI）"]}};
const OILS={mapping:{S1:["薰衣草","乳香","Clarity 清晰"],S2:["Release 釋放","快樂鼠尾草","Peace & Calming 寧靜安定"],S3:["Valor 勇氣","雪松","甜橙"],S4:["薄荷","檸檬","En-R-Gee 活力"],S5:["迷迭香","檸檬","Clarity 清晰"],S6:["Joy 喜悅","甜橙","Harmony 和諧"],S7:["乳香","Sacred Mountain 神聖之山","Valor 勇氣"],T1:["Release 釋放","薰衣草"],T2:["Valor 勇氣","雪松"],T3:["En-R-Gee 活力","薄荷"],T4:["迷迭香","Clarity 清晰"],T5:["Joy 喜悅","甜橙"],T6:["Sacred Mountain 神聖之山","乳香"],T7:["薰衣草","乳香"]}};
let radarChart=null, trendChart=null;
function boot(){buildForm();renderStageHelp();wireJournal();renderTrend();document.getElementById('submitBtn').addEventListener('click',onSubmit);document.getElementById('downloadBtn').addEventListener('click',downloadPNG);document.getElementById('saveLogBtn').addEventListener('click',saveCurrentToLog);}
function rowSlider(key,label){return `<div style="margin:10px 0"><label>${label}</label><input class="slider" type="range" min="0" max="10" step="1" value="5" data-key="${key}" oninput="updateProgress()"/><div class="caption">現在分數：<span id="${key}-val">5</span></div></div>`}
function buildForm(){const qWrap=document.getElementById('qWrap'), tWrap=document.getElementById('tWrap'); qWrap.innerHTML=Object.entries(Q_TEXTS).map(([k,v])=>rowSlider(k,v)).join(''); tWrap.innerHTML=Object.entries(T_TEXTS).map(([k,v])=>rowSlider(k,v)).join(''); document.querySelectorAll('input.slider').forEach(inp=>{inp.addEventListener('input',e=>{const k=e.target.dataset.key;document.getElementById(k+'-val').textContent=e.target.value;});}); updateProgress();}
function updateProgress(){const sliders=[...document.querySelectorAll('input.slider')]; const percent=Math.round((sliders.length/14)*100); document.getElementById('progressBar').style.width=percent+'%'; document.getElementById('progressNum').textContent=sliders.length;}
function renderStageHelp(){const wrap=document.getElementById('stageHelp'); wrap.innerHTML=''; ["S1","S2","S3","S4","S5","S6","S7"].forEach(sid=>{const m=STAGE_META[sid]; wrap.innerHTML+=`<div class="card"><h3>${m.name}</h3><div class="caption">關鍵字：${m.keywords.join('、')}</div><ul>${m.actions.map(a=>`<li>${a}</li>`).join('')}</ul></div>`;});}
function computeScores(ans,penalty=false,tau=4.0,delta=0.3){const Q=Array.from({length:7},(_,i)=>Number(ans['Q'+(i+1)]||0)); const T=Array.from({length:7},(_,i)=>Number(ans['T'+(i+1)]||0)); const wQ=.60,wPrev=.20,wNext=.20; const stagesRaw=[]; for(let i=0;i<7;i++){const prevT=T[(i+6)%7], nextT=T[i]; let v=wQ*Q[i]+wPrev*prevT+wNext*nextT; if(penalty){if(prevT<tau)v-=delta; if(nextT<tau)v-=delta; v=Math.max(0,v);} stagesRaw.push(v);} const stages=stagesRaw.map(v=>Math.round(v*10)/1); const transitions=T.map(v=>Math.round(v*10)/1); const sD={}, tD={}; for(let i=0;i<7;i++){sD['S'+(i+1)]=stages[i]; tD['T'+(i+1)]=transitions[i];} const dom=stages.indexOf(Math.max(...stages)); const bott=[...transitions].map((v,i)=>({v,i})).sort((a,b)=>a.v-b.v).slice(0,2).map(x=>'T'+(x.i+1)); return {stages:sD, transitions:tD, dominant_stage:'S'+(dom+1), bottleneck_transitions:bott};}
function onSubmit(){const payload={}; document.querySelectorAll('input.slider').forEach(s=>payload[s.dataset.key]=Number(s.value)); const usePenalty=document.getElementById('usePenalty').checked; const tau=Number(document.getElementById('tauInput').value||4.0); const delta=Number(document.getElementById('deltaInput').value||0.3); const result=computeScores(payload,usePenalty,tau,delta); window.__enervi_lastResult={payload,result,createdAt:new Date().toISOString()}; renderResult(result,payload);}
function renderResult(result,payload){document.getElementById('resultCard').style.display='block'; const labels=["S1 覺察","S2 釋放","S3 信任","S4 行動","S5 流動","S6 共鳴","S7 整合"]; const st=labels.map((_,i)=>result.stages['S'+(i+1)]); const qOnly=labels.map((_,i)=>payload['Q'+(i+1)]*10); const tProj=labels.map((_,i)=>payload['T'+(i+1)]*10*0.9); const data={labels,datasets:[{label:'整合',data:st,fill:true,borderWidth:2,tension:.2},{label:'僅 Q',data:qOnly,fill:false,borderWidth:2,borderDash:[6,6],pointRadius:0},{label:'僅 T',data:tProj,fill:false,borderWidth:1,pointRadius:0}]}; const colors={purple:'rgba(127,91,241,.9)',purpleFill:'rgba(127,91,241,.25)',gray:'rgba(180,182,204,.9)',lightPurple:'rgba(190,160,255,.8)'}; data.datasets[0].borderColor=colors.purple; data.datasets[0].backgroundColor=colors.purpleFill; data.datasets[1].borderColor=colors.gray; data.datasets[2].borderColor=colors.lightPurple; const cfg={type:'radar',data,options:{responsive:true,scales:{r:{min:0,max:100,angleLines:{color:'#33354e'},grid:{color:'#2b2c46'},pointLabels:{color:'#cdcbef'}}},plugins:{legend:{display:false}}}}; if(radarChart){radarChart.destroy();} radarChart=new Chart(document.getElementById('radarCanvas'),cfg); const dom=result.dominant_stage; const [b1,b2]=result.bottleneck_transitions; document.getElementById('summaryTitle').textContent="摘要 — 主導：「"+STAGE_META[dom].name+"」"; document.getElementById('summaryText').innerHTML=`瓶頸轉換：<b>${b1}</b>、次瓶頸：<b>${b2}</b>。`; const oilHtml=sid=>(OILS.mapping[sid]||[]).slice(0,3).map(n=>`<span class="badge">${n}</span>`).join(' '); document.getElementById('oilSuggest').innerHTML=`<div class="caption">主導階段推薦：</div><div style="margin:6px 0 12px">${oilHtml(dom)}</div><div class="caption">瓶頸轉換建議：</div><div>${oilHtml(b1)} ${oilHtml(b2)}</div><div class="caption" style="margin-top:8px">＊非醫療用途建議，請依安全指引使用。</div>`; let sHTML=''; for(let i=1;i<=7;i++){sHTML+=`<div>${STAGE_META['S'+i].name}：<b>${result.stages['S'+i]}</b></div>`;} document.getElementById('stageScores').innerHTML=sHTML; let tHTML=''; for(let i=1;i<=7;i++){tHTML+=`<div>T${i}：<b>${result.transitions['T'+i]}</b></div>`;} document.getElementById('transScores').innerHTML=tHTML;}
function wireJournal(){document.getElementById('saveJournal').addEventListener('click',()=>{const text=document.getElementById('journal').value||''; const logs=JSON.parse(localStorage.getItem('enervi7-journal')||'[]'); logs.unshift({text,at:new Date().toISOString()}); localStorage.setItem('enervi7-journal',JSON.stringify(logs.slice(0,200))); alert('已保存到日誌（本地）');});}
function saveCurrentToLog(){const last=window.__enervi_lastResult; if(!last){alert('請先完成一次測驗');return;} const list=JSON.parse(localStorage.getItem('enervi7-history')||'[]'); list.unshift(last); localStorage.setItem('enervi7-history',JSON.stringify(list.slice(0,100))); renderTrend(); alert('已保存結果到歷史（本地）');}
function renderTrend(){const list=JSON.parse(localStorage.getItem('enervi7-history')||'[]'); const recent=list.slice(0,7).reverse(); const labels=recent.map(r=>new Date(r.createdAt).toLocaleDateString().slice(5)); const avgs=recent.map(r=>{const vals=Object.values(r.result.stages); return Math.round(vals.reduce((a,b)=>a+b,0)/vals.length);}); const ctx=document.getElementById('trendCanvas'); if(trendChart) trendChart.destroy(); trendChart=new Chart(ctx,{type:'line',data:{labels,datasets:[{data:avgs,borderWidth:2,tension:.3}]} ,options:{scales:{y:{min:0,max:100}},plugins:{legend:{display:false}}}}); document.getElementById('historyNote').textContent=recent.length?`以最近 ${recent.length} 次整體平均（0–100）繪製。`:"尚無歷史資料。";}
async function downloadPNG(){const card=document.getElementById('resultCard'); const canvas=await html2canvas(card,{backgroundColor:null}); const url=canvas.toDataURL('image/png'); const a=document.createElement('a'); a.href=url; a.download='enervi7-result.png'; a.click();}
